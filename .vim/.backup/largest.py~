from collections import Counter
from itertools import chain, combinations, product
from word_set import *

def powerset(iterable):
  "powerset([1,2,3]) --> () (1,) (2,) (3,) (1,2) (1,3) (2,3) (1,2,3)"
  s = list(iterable)
  return chain.from_iterable(combinations(s, r) for r in range(len(s)+1))


letter_counts = {}

for word_set in product(word_set, word_set, word_set):
  word_set = sorted(word_set)
  word = ' '.join(word_set)
  if word_set == () or word in letter_counts:
    continue
  counter = Counter(word)
  counts = [v for _, v in counter.items()]
  if max(counts) > 1:
    continue
  print(word)
  letter_counts[word] = counts

uniquely_lettered_words = [word for word, count in letter_counts.items()
                                if max(letter_counts[word]) == 1]

for word in uniquely_lettered_words:
  print(word)
