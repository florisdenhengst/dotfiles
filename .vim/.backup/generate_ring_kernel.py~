#!/usr/bin/env python

import sys
import numpy as np
from scipy import stats
from sklearn.datasets.samples_generator import make_circles

REQ_ARGUMENT_SIZE = 2
N_COLS = 4

# parse arguments
if len(sys.argv) < REQ_ARGUMENT_SIZE + 1:
    print("Script requires ", REQ_ARGUMENT_SIZE, "arguments")
    exit(1)

n_elements = int(sys.argv[1])
output_file = sys.argv[2]
sys.stdout.write('Generating circles using {} points...'.format(n_elements ))

# create circles using sklearn
xy, classes  = make_circles(n_elements, factor=.1, noise=.1)

# radial function
r = np.exp(-(xy[:, 0] ** 2 + xy[:, 1] ** 2))

# allocate new ndarray to contain x, y, z and class (0/1) info
projected_x = np.zeros((n_elements, N_COLS))
# fill first 2 columns with the original ring xys
projected_x[:,:-2] = xy
# fill the 3rd column with the radial function values
projected_x[:, 2] = r
# fill the last column with the class info
projected_x[:, 3] = classes

sys.stdout.write('done!\n')
sys.stdout.write('Dumping to {} ...'.format(output_file))
np.savetxt(output_file, projected_x, delimiter=',')
sys.stdout.write('done!\n')

